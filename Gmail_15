# Import necessary modules
import uiautomator2 as ui2
import time
import subprocess

# Device serial number of the receiver device
receiver_device_serial = "192.168.2.39:5555"

# Create a Device object for the sender device
sender_device = ui2.Device('cf611ff9')

# Create a Device object for the receiver device
receiver_device = ui2.Device(receiver_device_serial)

# ADB commands to turn on the receiver and sender devices' screens
receiver_turn_on_command = ['adb', '-s', receiver_device_serial, 'shell', 'input', 'keyevent', '224']
sender_turn_on_command = ['adb', '-s', 'cf611ff9', 'shell', 'input', 'keyevent', '224']

# ADB commands to turn off the receiver and sender devices' screens
receiver_turn_off_command = ['adb', '-s', receiver_device_serial, 'shell', 'input', 'keyevent', '26']
sender_turn_off_command = ['adb', '-s', 'cf611ff9', 'shell', 'input', 'keyevent', '26']

# Define the package name and activity name of the Gmail app
package_name = "com.google.android.gm"
activity_name = "com.google.android.gm.ConversationListActivityGmail"

# ADB command to start the Gmail app
adb_command = ["adb", "-s", receiver_device_serial, "shell", "am", "start", "-n", f"{package_name}/{activity_name}"]

# Turn on the receiver device's screen
subprocess.run(receiver_turn_on_command)

# Execute the ADB command to start the Gmail app
subprocess.run(adb_command)
time.sleep(2)

# Click on the search bar to activate it
receiver_device(resourceId="com.google.android.gm:id/open_search_bar_text_view").click()
time.sleep(2)

# Set text in the search bar
receiver_device.send_keys("Jeevansathi Matches")
time.sleep(2)
if receiver_device(text="Jeevansathi Matches").exists():
    print("Succesful match of search")
else:
    print("Not succesful match of search")
