# Import necessary modules
import uiautomator2 as ui2
import time
import subprocess

# Device serial number of the receiver device
receiver_device_serial = "192.168.2.39:5555"

# Create a Device object for the sender device
sender_device = ui2.Device('cf611ff9')

# Create a Device object for the receiver device
receiver_device = ui2.Device(receiver_device_serial)

# ADB commands to turn on the receiver and sender devices' screens
receiver_turn_on_command = ['adb', '-s', receiver_device_serial, 'shell', 'input', 'keyevent', '224']
sender_turn_on_command = ['adb', '-s', 'cf611ff9', 'shell', 'input', 'keyevent', '224']

# ADB commands to turn off the receiver and sender devices' screens
receiver_turn_off_command = ['adb', '-s', receiver_device_serial, 'shell', 'input', 'keyevent', '26']
sender_turn_off_command = ['adb', '-s', 'cf611ff9', 'shell', 'input', 'keyevent', '26']

# Define the package name and activity name of the Gmail app
package_name = "com.google.android.gm"
activity_name = "com.google.android.gm.ConversationListActivityGmail"

# ADB command to start the Gmail app
adb_command = ["adb", "-s", receiver_device_serial, "shell", "am", "start", "-n", f"{package_name}/{activity_name}"]

# Execute the ADB command
subprocess.run(adb_command)
time.sleep(2)
receiver_device(resourceId="com.google.android.gm:id/compose_button").click()
time.sleep(2)
receiver_device.xpath('//*[@resource-id="com.google.android.gm:id/peoplekit_autocomplete_chip_group"]/android.widget.EditText[1]').set_text("shubhampalsingh385@gmail.com")
time.sleep(2)
receiver_device(resourceId="com.google.android.gm:id/peoplekit_listview_contact_method").click()
time.sleep(2)
receiver_device(resourceId="com.google.android.gm:id/subject").set_text("welcome mail")
time.sleep(2)
receiver_device.xpath('//*[@resource-id="com.google.android.gm:id/wc_body_layout"]/android.webkit.WebView[1]').set_text("hello i am shubham pal singh")
time.sleep(2)
receiver_device(resourceId="com.google.android.gm:id/send").click()
print("The mail is sent when usb is connected")
receiver_device.press("home")
# Define the initial swipe coordinates
start_x = 500
start_y = 500
end_y = 1500
swipe_duration = 0.5

# Perform multiple swipes to scroll the screen downwards
num_swipes = 5
for _ in range(num_swipes):
    receiver_device.swipe(start_x, start_y, start_x, end_y, duration=swipe_duration)
    time.sleep(1)

# Click on the Bluetooth tile in the system UI
receiver_device(resourceId="com.android.systemui:id/tile_label", text="Bluetooth").click()
time.sleep(2)

# Long-click on the Bluetooth tile
receiver_device(resourceId="com.android.systemui:id/tile_label", text="Bluetooth").long_click()
time.sleep(2)

# Click on the "Pair new device" option
receiver_device(resourceId="android:id/title", text="Pair new device").click()

# Check for the presence of a specific device ("OnePlus 9 Pro 5G") and initiate the pairing process
num_swipes = 100
for _ in range(num_swipes):
    if receiver_device(resourceId="android:id/title", text="OnePlus 9 Pro 5G").exists():
        receiver_device(resourceId="android:id/title", text="OnePlus 9 Pro 5G").click()
        time.sleep(1)
        receiver_deviced(resourceId="android:id/button2").click()
        print("Bluetooth not paired")
        break
    else:
        print("Bluetooth paired")
    time.sleep(1)
