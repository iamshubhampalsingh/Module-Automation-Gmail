# Import necessary modules
import uiautomator2 as ui2
import time
import subprocess
from datetime import datetime, timedelta

# Device serial number of the receiver device
receiver_device_serial = "192.168.2.39:5555"

# Create a Device object for the sender device
sender_device_serial = 'cf611ff9'  # Use the actual sender device serial number as a string
sender_device = ui2.Device(sender_device_serial)

# Create a Device object for the receiver device
receiver_device = ui2.Device(receiver_device_serial)

# ADB commands to turn on the receiver and sender devices' screens
receiver_turn_on_command = ['adb', '-s', receiver_device_serial, 'shell', 'input', 'keyevent', '224']
sender_turn_on_command = ['adb', '-s', sender_device_serial, 'shell', 'input', 'keyevent', '224']

# ADB commands to turn off the receiver and sender devices' screens
receiver_turn_off_command = ['adb', '-s', receiver_device_serial, 'shell', 'input', 'keyevent', '26']
sender_turn_off_command = ['adb', '-s', sender_device_serial, 'shell', 'input', 'keyevent', '26']

# Define the package name and activity name of the Gmail app
package_name = "com.google.android.gm"
activity_name = "com.google.android.gm.ConversationListActivityGmail"

# ADB command to start the Gmail app
adb_command = ["adb", "-s", sender_device_serial, "shell", "am", "start", "-n", f"{package_name}/{activity_name}"]

# ADB commands to simulate volume up and volume down key events
volume_up_command = ['adb', '-s', receiver_device_serial, 'shell', 'input', 'keyevent', '24']
volume_down_command = ['adb', '-s', receiver_device_serial, 'shell', 'input', 'keyevent', '25']

# Simulate volume up
subprocess.run(volume_up_command)

# Simulate volume down
subprocess.run(volume_down_command)
